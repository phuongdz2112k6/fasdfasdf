	getgenv().Server_Hop = true
getgenv().Chest_Farm = true
getgenv().wait_Time = 35 -- Seconds

local placeId = game.PlaceId
if placeId == 2753915549 or placeId == 4442272183 or placeId == 7449423635 then
repeat wait() until game:IsLoaded() ~= false


local Counter = 0
local PlaceID = game.PlaceId
     local AllIDs = {}
     local foundAnything = ""
     local actualHour = os.date("!*t").hour
     local Deleted = false

     local File = pcall(function()
         AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
     end)
     if not File then
         table.insert(AllIDs, actualHour)
         writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
     end
    
     function TPReturner()
         local Site;
         if foundAnything == "" then
             Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
         else
             Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
         end
         local ID = ""
         if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
             foundAnything = Site.nextPageCursor
         end
         local num = 0;
         for i,v in pairs(Site.data) do
             local Possible = true
             ID = tostring(v.id)
             if tonumber(v.maxPlayers) > tonumber(v.playing) then
                 for _,Existing in pairs(AllIDs) do
                     if num ~= 0 then
                         if ID == tostring(Existing) then
                             Possible = false
                         end
                     else
                         if tonumber(actualHour) ~= tonumber(Existing) then
                             local delFile = pcall(function()
                                delfile("NotSameServers.json")
                                 AllIDs = {}
                                 table.insert(AllIDs, actualHour)
                             end)
                         end
                     end
                     num = num + 1
                 end
                 if Possible == true then
                     table.insert(AllIDs, ID)
                     wait()
                     pcall(function()
                         writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                         wait()
                         game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                     end)
                     wait(4)
                 end
             end
         end
     end
 
     function Teleport()
        while wait() do
            pcall(function()
                 TPReturner()
                 if foundAnything ~= "" then
                     TPReturner()
                 end
            end)
        end
     end

     spawn(function()
        local ohString1 = "SetTeam"
        local ohString2 = "Marines" -- Pirates
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(ohString1, ohString2)
     end)


spawn(function()
   while wait(.8) do
      if Chest_Farm then
          pcall(function()
  
  for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
      if string.find(v.Name, "Chest") then
          print(v.Name)
          game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
          wait(.15)
      end
  end
  game.Players.LocalPlayer.Character.Head:Destroy()
  for _,v in pairs(game:GetService("Workspace"):GetDescendants()) do
   if string.find(v.Name, "Chest") and v:IsA("TouchTransmitter") then
   firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Parent, 0) --0 is touch
   wait()
   firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Parent, 1) -- 1 is untouch
   end
   end
  end)
      end
  end
end)

spawn(function()
    while wait() do
        if Server_Hop then
            pcall(function()
                        wait(wait_Time)
                        Teleport()
                        print("Finding new server")
            end)
        end
    end
end)


end
--beli counter
Back = Drawing.new("Square")
Back.Color = Color3.fromRGB(20,20,20)
Back.Position = Vector2.new(game:GetService("Workspace").CurrentCamera.ViewportSize.X/2.24, game:GetService("Workspace").CurrentCamera.ViewportSize.Y/1000)
Back.Size = Vector2.new(230,75)
Back.Transparency = 0
Back.Visible = true
Back.Filled = true

Beli = Drawing.new("Text")
Beli.Text = "By: Ogiwara Sayu \n DisCord Sayu Bị Mê Cu#7383 \n Thank you for using"
Beli.Color = Color3.fromRGB(250,200,200)
Beli.Position = Vector2.new(game:GetService("Workspace").CurrentCamera.ViewportSize.X/2.22, game:GetService("Workspace").CurrentCamera.ViewportSize.Y/1000)
Beli.Size = 30
Beli.Visible = true
repeat wait() until game.Players
repeat wait() until game.Players.LocalPlayer
repeat wait() until game.Players.LocalPlayer:FindFirstChild("Data")
repeat wait() until game.Players.LocalPlayer.Data:FindFirstChild("Beli")
oldbeli = game:GetService("Players").LocalPlayer.Data.Beli.Value
totalbeli = 0
local SaveDatas = {
    ["Total Beli"] = {
        ["Beli Counter"] = 0,
    },
	["Time Counter"] = {
		["Hour"] = 0,
		["Minute"] = 0,
		["Second"] = 0,
	}
}

function Load()
    if readfile and writefile and isfile then
        if isfile("BeliCounter-" .. game.Players.LocalPlayer.Name .. ".json") == false then
            print('belicounter fail ')
            writefile("BeliCounter-" .. game.Players.LocalPlayer.Name .. ".json", game:GetService("HttpService"):JSONEncode(SaveDatas))
        else
            local Decode = game:GetService("HttpService"):JSONDecode(readfile("BeliCounter-" .. game.Players.LocalPlayer.Name .. ".json"))
            for i,v in pairs(Decode) do
                SaveDatas[i] = v
            end 
        end
    else
        warn("Failed Load")
        return false
    end
end
Load()
function Save()
    if readfile and writefile and isfile then
        if isfile("BeliCounter-" .. game.Players.LocalPlayer.Name .. ".json") == false then
            Load()
        else
            local Decode = game:GetService("HttpService"):JSONDecode(readfile("BeliCounter-" .. game.Players.LocalPlayer.Name .. ".json"))
            local Array = {}
            for i,v in pairs(SaveDatas) do
                Array[i] = v
            end
            writefile("BeliCounter-" .. game.Players.LocalPlayer.Name .. ".json", game:GetService("HttpService"):JSONEncode(Array))
        end
    else
        warn("Failed Save")
        return false
    end
end
local totalbountyinfile = SaveDatas["Total Beli"]["Beli Counter"]
local lasthour = SaveDatas["Time Counter"]["Hour"]
local lastminute = SaveDatas["Time Counter"]["Minute"]
local lastsecond = SaveDatas["Time Counter"]["Second"]
game:GetService("Players").LocalPlayer.Data.Beli.Changed:Connect(function(cac)
    local newbeli = tonumber(cac)
    totalbeli = newbeli - oldbeli
    
    if SaveDatas["Total Beli"]["Beli Counter"] <= 0 then
        SaveDatas["Total Beli"]["Beli Counter"] = totalbeli
        Save()
    elseif SaveDatas["Total Beli"]["Beli Counter"] > 0 then
        SaveDatas["Total Beli"]["Beli Counter"] = totalbountyinfile + totalbeli
        Save()
    end
    Beli.Text = " Beli Treo : "..SaveDatas["Total Beli"]["Beli Counter"].."\n Thoi Gian Treo: "..SaveDatas["Time Counter"]["Hour"].."h:"..SaveDatas["Time Counter"]["Minute"].."m:"..SaveDatas["Time Counter"]["Second"].."s"
end)
while wait() do
    Load()
	local GameTime = math.floor(workspace.DistributedGameTime+0.5)
	local Hour = math.floor(GameTime/(60^2))%24
	local Minute = math.floor(GameTime/(60^1))%60
	local Second = math.floor(GameTime/(60^0))%60
	if SaveDatas["Time Counter"]["Hour"] <= 0 then
		SaveDatas["Time Counter"]["Hour"] = Hour
		Save()
	elseif SaveDatas["Time Counter"]["Hour"] > 0 then
		SaveDatas["Time Counter"]["Hour"] = lasthour + Hour
		Save()
	end
	if SaveDatas["Time Counter"]["Minute"] <= 0 then
		SaveDatas["Time Counter"]["Minute"] = Minute
		Save()
	elseif SaveDatas["Time Counter"]["Minute"] > 0 then
		SaveDatas["Time Counter"]["Minute"] = lastminute + Minute
		Save()
	end
	if SaveDatas["Time Counter"]["Second"] <= 0 then
		SaveDatas["Time Counter"]["Second"] = Second
		Save()
	elseif SaveDatas["Time Counter"]["Second"] > 0 then
		SaveDatas["Time Counter"]["Second"] = lastsecond + Second
		Save()
	end
	if SaveDatas["Time Counter"]["Second"] >= 60 then
		SaveDatas["Time Counter"]["Second"] = SaveDatas["Time Counter"]["Second"]-60
		SaveDatas["Time Counter"]["Minute"] = SaveDatas["Time Counter"]["Minute"] + 1
		print('+1 for minute')
		Save()
	end
	
	if SaveDatas["Time Counter"]["Minute"] >= 60 then
		SaveDatas["Time Counter"]["Minute"] = SaveDatas["Time Counter"]["Minute"] - 60
		SaveDatas["Time Counter"]["Hour"] = SaveDatas["Time Counter"]["Hour"] + 1
		print('+1 for hour')
		Save()
	end
end
